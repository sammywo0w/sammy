from flask import Flask, request, send_file, jsonify
from pptx import Presentation
from pptx.util import Pt
from pptx.enum.text import PP_ALIGN
import os
import uuid

app = Flask(__name__)

# Плейсхолдеры в шаблоне и соответствующие поля в JSON
PLACEHOLDER_MAP = {
    "[ Target Customers]": "target_customers",
    "[ Customer Channels]": "customer_channels",
    "[ Value Proposition]": "value_proposition",
    "[ Activities]": "activities",
    "[ Customer Relationship]": "customer_relationship",
    "[ Offering]": "offering",
    "[ Partners]": "partners",
    "[ Revenue Drivers]": "revenue_drivers",
    "[ Cost Drivers]": "cost_drivers",
    "[ Resources]": "resources",
    "<Business Model Name>": "model_name"
}

def apply_values_to_shape(shape, placeholder, values):
    if not shape.has_text_frame:
        return
    if placeholder not in shape.text:
        return

    shape.text_frame.clear()

    if isinstance(values, list):
        for val in values:
            p = shape.text_frame.add_paragraph()
            p.text = val
            p.font.size = Pt(12)
            p.alignment = PP_ALIGN.LEFT
    else:
        p = shape.text_frame.paragraphs[0]
        p.text = values
        p.font.size = Pt(14)
        p.alignment = PP_ALIGN.LEFT

@app.route('/generate', methods=['POST'])
def generate_pptx():
    data = request.get_json()
    if not data:
        return jsonify({"error": "Invalid or missing JSON"}), 400

    template_path = "final Business Model Template.pptx"
    prs = Presentation(template_path)

    for slide in prs.slides:
        for shape in slide.shapes:
            if not shape.has_text_frame:
                continue
            for placeholder, field_key in PLACEHOLDER_MAP.items():
                if placeholder in shape.text:
                    apply_values_to_shape(shape, placeholder, data.get(field_key, ""))

    filename = f"{uuid.uuid4().hex}.pptx"
    filepath = os.path.join("/tmp", filename)
    prs.save(filepath)
    return send_file(filepath, as_attachment=True, download_name="business_model_canvas.pptx")

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=int(os.environ.get("PORT", 5000)))

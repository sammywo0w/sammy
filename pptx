from flask import Flask, request, send_file, jsonify
from pptx import Presentation
import os
import uuid

app = Flask(__name__)

def replace_text(placeholders, values, shape):
    if not isinstance(values, list):
        values = [values]

    used_placeholders = set()

    # Заменяем все найденные плейсхолдеры
    for paragraph in shape.text_frame.paragraphs:
        for run in paragraph.runs:
            for i, placeholder in enumerate(placeholders):
                if placeholder in run.text:
                    if i < len(values):
                        run.text = run.text.replace(placeholder, values[i])
                        used_placeholders.add(placeholder)
                    else:
                        run.text = run.text.replace(placeholder, "")  # удаляем, если данных нет

    # Добавляем оставшиеся значения, если их больше, чем плейсхолдеров
    extra_values = values[len(placeholders):]
    for val in extra_values:
        p = shape.text_frame.add_paragraph()
        p.text = f"- {val}"

@app.route('/generate', methods=['POST'])
def generate_pptx():
    data = request.get_json()
    if not data:
        return jsonify({"error": "Invalid or missing JSON"}), 400

    template_path = "Business Model Template.pptx"
    prs = Presentation(template_path)

    fields = {
        "<Business Model Name>": data.get("model_name", ""),
        "<Target Customer": data.get("target_customers", []),
        "<Customer Channel": data.get("customer_channels", []),
        "<Value Proposition": data.get("value_proposition", []),
        "<Activity": data.get("activities", []),
        "<Customer Relation": data.get("customer_relationship", []),
        "<Offering": data.get("offering", []),
        "<Partner": data.get("partners", []),
        "<Revenue driver": data.get("revenue_drivers", []),
        "<Cost driver": data.get("cost_drivers", []),
        "<Resource": data.get("resources", [])
    }

    for slide in prs.slides:
        for shape in slide.shapes:
            if not shape.has_text_frame:
                continue
            for key, values in fields.items():
                if key in shape.text:
                    if key == "<Business Model Name>":
                        replace_text([key], values, shape)
                    else:
                        placeholder_list = [f"{key} {i+1}>" for i in range(max(len(values), 3))]
                        replace_text(placeholder_list, values, shape)

    filename = f"{uuid.uuid4().hex}.pptx"
    filepath = os.path.join("/tmp", filename)
    prs.save(filepath)
    return send_file(filepath, as_attachment=True, download_name="business_model_canvas.pptx")

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=int(os.environ.get("PORT", 5000)))

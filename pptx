from flask import Flask, request, send_file, jsonify
from pptx import Presentation
from pptx.util import Inches, Pt
from pptx.enum.shapes import MSO_SHAPE
from pptx.dml.color import RGBColor
import os
import uuid

app = Flask(__name__)

@app.route('/generate', methods=['POST'])
def generate_pptx():
    data = request.get_json()
    if not data:
        return jsonify({"error": "Invalid or missing JSON"}), 400

    model_name = data.get("model_name", "Business Model Canvas")

    prs = Presentation()
    slide = prs.slides.add_slide(prs.slide_layouts[6])

    # Заголовок
    title_shape = slide.shapes.add_textbox(Inches(0.5), Inches(0.2), Inches(9), Inches(0.8))
    title_frame = title_shape.text_frame
    title_frame.text = f"Business Model: {model_name}"
    title_frame.paragraphs[0].font.size = Pt(24)
    title_frame.paragraphs[0].font.bold = True

    titles = [
        ("Target Customers", data.get("target_customers", []), 0, 0),
        ("Customer Channels", data.get("customer_channels", []), 1, 0),
        ("Value Proposition", data.get("value_proposition", []), 2, 0),
        ("Activities", data.get("activities", []), 3, 0),
        ("Resources", data.get("resources", []), 4, 0),
        ("Customer Relationship", data.get("customer_relationship", []), 0, 1),
        ("Offering", data.get("offering", []), 1, 1),
        ("Partners", data.get("partners", []), 2, 1),
        ("Revenue Drivers", data.get("revenue_drivers", []), 0, 2),
        ("Cost Drivers", data.get("cost_drivers", []), 1, 2),
    ]

    # Размеры
    col_width = Inches(2.0)
    row_height = Inches(2.0)

    for title, items, col, row in titles:
        left = col * col_width + Inches(0.5)
        top = row * row_height + Inches(1.2)
        width = col_width
        height = row_height

        shape = slide.shapes.add_shape(MSO_SHAPE.RECTANGLE, left, top, width, height)
        shape.fill.solid()
        shape.fill.fore_color.rgb = RGBColor(255, 255, 255)
        shape.line.color.rgb = RGBColor(0, 0, 128)

        text_frame = shape.text_frame
        text_frame.clear()  # очищаем на всякий случай
        title_paragraph = text_frame.paragraphs[0]
        title_paragraph.text = title
        title_paragraph.font.size = Pt(14)
        title_paragraph.font.bold = True

        font_size = Pt(12 if len(items) <= 5 else 10)

        for item in items:
            p = text_frame.add_paragraph()
            p.text = f"• {item}"
            p.level = 0
            p.font.size = font_size
            p.font.color.rgb = RGBColor(0, 0, 0)

    filename = f"{uuid.uuid4().hex}.pptx"
    filepath = os.path.join("/tmp", filename)
    prs.save(filepath)
    return send_file(filepath, as_attachment=True, download_name="business_model_canvas.pptx")

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=int(os.environ.get("PORT", 5000)))
